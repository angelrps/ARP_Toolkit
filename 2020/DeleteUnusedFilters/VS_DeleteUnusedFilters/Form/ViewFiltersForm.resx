<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        AAAAAAAAAAAAAAAAAAAAAAA/AAAA+QAAANUAAAAYAAAAAgAAAAVAUPMGPEzntjxM5/88TOf/PEzn/zxM
        5/c8TOeCPEzmDDxM52E8TOfsPEzn/zxM5/88TOf/PEzn9AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AAAD5AAAA1QAAABgAAAAJAAAAE6PT/wE8TOeRPEzn/zxM
        5/88TOf3PEzngzxN5wk7TOcAOkvoAjxM52E8TOfsPEzn/zxM5/88TOfPAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPwAAAPkAAADVAAAAFwAAABgAAABYAAAAATxM
        6R08TOeQPEzntzxM52s8TOcKPEznAAAAAAA7TeYAO07mAzxM51I8TOexPEznoDxM5zcAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA/AAAA+QAAANUAAAAXAAAAGAAA
        ALsAAABOAAAAAUFR+gI8TOcGPE7nATxO5wAAAAAAAAAAAAAAAAA8TOcAPEznADxM5wU8TOgEPEzkAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD8AAAD5AAAA1QAA
        ABcAAAAXAAAA1gAAAOIAAAAuAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAQAAA
        APoAAADVAAAAFwAAABcAAADVAAAA+gAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAUAAACFAAAA/wAAANEAAAAVAAAAFQAAANEAAAD/AAAAhAAAAAUAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAAYgAAAPIAAAD5AAAAdwAAAAIAAAACAAAAdwAAAPkAAADyAAAAYgAAAAEAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAEcAAADlAAAA/wAAAJUAAAALAAAAAAAAAAAAAAALAAAAlgAAAP8AAADlAAAARwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAxAAAA1AAAAP8AAACwAAAAFgAAAAAAAAAAAAAAAAAAAAAAAAAWAAAAsAAA
        AP8AAADUAAAAMQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAHgAAAL4AAAD/AAAAyAAAACYAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAmAAAAyAAAAP8AAAC+AAAAHgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABAAAACkAAAA/wAAANwAAAA6AAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAA6AAAA3AAAAP8AAACkAAAAEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAHAAAAiQAAAP0AAADrAAAAUgAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABTAAAA6wAAAP0AAACIAAAABwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAGwAAAD1AAAA9gAAAG4AAAACAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAABuAAAA9gAAAPUAAABsAAAAAgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAA6wAAAPsAAACFAAAABgAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAACGAAAA+wAA
        AOoAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAtAAAAcwAAANsAAAD/AAAA5AAA
        AHkAAABnAAAAaQAAAGkAAABpAAAAaQAAAGkAAABpAAAAaQAAAGkAAABpAAAAaQAAAGkAAABpAAAAZwAA
        AHoAAADkAAAA/wAAANsAAABzAAAALQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABQAAAK0AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAA
        AP8AAAD/AAAA/wAAAP8AAAD/AAAA/wAAAP8AAACsAAAABQAAAAAAAAAAAAAAAAAAAAAAAAABAAAAXgAA
        ALQAAAC2AAAAtgAAALYAAAC2AAAAtgAAALYAAAC2AAAAtgAAALYAAAC2AAAAtgAAALYAAAC2AAAAtgAA
        ALYAAAC2AAAAtgAAALYAAAC2AAAAtgAAALYAAAC2AAAAswAAAF4AAAABAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAABAAAABgAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAA
        AAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAHAAAABwAAAAcAAAAGAAAAAQAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//4OD//8BA///AAP//4AD/8+AA//AwAf/wCAP/8AAB//AAAP/w
        IAD/8AAA//AAQP/wAOD/8AH5//AP///wD///4Af//8AD///Bg///g8H//wfg//4P8H/8H/g/+B/4H/g/
        /B/gAAAHwAAAA8AAAAPgAAAH////////////////
</value>
  </data>
</root>