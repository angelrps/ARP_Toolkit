<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAIAEBAAAAEAIABoBAAAJgAAACAgAAABACAAqBAAAI4EAAAoAAAAEAAAACAAAAABACAAAAAAAAAE
        AAASCwAAEgsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAADQAAAAWAAAAPgAAABYAAAA+AAAAFAAA
        AD4AAAAVAAAAPgAAABQAAAA+AAAAFwAAADwAAAAAAAAAAAAAAAwAAABRAAAAGgAAAEQAAAAZAAAARAAA
        ABcAAABFAAAAGQAAAEUAAAAXAAAAQwAAABkAAABSAAAAAAAAAFQAAACHAAAAjQAAAH4AAAB6AAAAfAAA
        AHoAAAB9AAAAegAAAHwAAAB6AAAAfgAAAIEAAAAkAAAARAAAABsAAACQAAAAYwAAAEIAAABEAAAARAAA
        AEQAAABEAAAARAAAAEQAAABEAAAAQwAAAC0AAACAAAAAQgAAAFoAAACyAAAAlAAAAIYAAAB/AAAAgAAA
        AIAAAACAAAAAgAAAAIAAAACAAAAAfwAAAJcAAABcAAAAagAAAEAAAAAxAAAAlQAAAAUAAAADAAAAAwAA
        AAMAAAADAAAAAwAAAAMAAAADAAAAAwAAAAAAAABAAAAAaQAAAGoAAABDAAAAagAAAJQAAAADAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgAAAGkAAABqAAAAPwAAACEAAACUAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD4AAABpAAAAagAAAEQAAAByAAAAmQAA
        ABIAAAARAAAACgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA+AAAAaQAAAGoAAABBAAAAIAAA
        AMwAAACfAAAAiQAAAI0AAAANAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPgAAAGkAAABvAAAAXAAA
        AGoAAABMAAAAlwAAADAAAACIAAAAFQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAD0AAACJAAAAigAA
        AD4AAAAEAAAAAAAAAEYAAACTAAAAmwAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA9AAAAqAAA
        AGwAAAAZAAAAAAAAAAAAAAAAAAAATQAAAMEAAAB7AAAAcQAAAHIAAAByAAAAcgAAAHIAAABwAAAAkQAA
        AGkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAIAAAAmAAAAOAAAADcAAAA3AAAANwAAADcAAAA3AAAANwAA
        ADYAAAAVAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP//AADAAAAAwAAAAIAAAAAAAAAAAAAAAAAgAAA/4AAAP+AAAA/g
        AAAH4AAAB+AAAIfhAADABwAAwAcAAP//AAAoAAAAIAAAAEAAAAABACAAAAAAAAAQAAASCwAAEgsAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAACAAAAZwAA
        AHwAAAAFAAAAIAAAAJUAAACBAAAACgAAAB0AAACTAAAAhAAAAA0AAAATAAAAjAAAAI0AAAAUAAAAEAAA
        AIkAAACQAAAAGAAAAAkAAAB/AAAAlgAAACIAAAAHAAAAfgAAAHEAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAcAAACrAAAAoQAAAAQAAAAjAAAAowAAAI0AAAALAAAAHwAAAKAAAACQAAAADgAAABUAAACYAAAAmgAA
        ABYAAAASAAAAlQAAAJwAAAAaAAAACgAAAIsAAACkAAAAJQAAAAYAAACmAAAAvAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAQAAABUAAAAOAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAYAAAAAAAA
        AAAAAAALAAAAQwAAAE4AAABQAAAAhQAAAHIAAABNAAAATgAAAE4AAABOAAAATgAAAE4AAABOAAAATgAA
        AE4AAABOAAAATgAAAE4AAABOAAAATgAAAE4AAABOAAAATgAAAE4AAABOAAAARwAAABEAAAAAAAAACQAA
        AA0AAAAAAAAAAAAAADkAAADrAAAA4wAAAN0AAADkAAAA4gAAAN0AAADdAAAA3QAAAN0AAADdAAAA3QAA
        AN0AAADdAAAA3QAAAN0AAADdAAAA3QAAAN0AAADdAAAA3QAAAN0AAADdAAAA3QAAAOAAAADyAAAAVAAA
        AAAAAAByAAAArAAAAAAAAAAAAAAAQQAAAOMAAABGAAAAHQAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAA
        ACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAANgAA
        ANwAAABdAAAAAAAAAIoAAADRAAAAEgAAABUAAABTAAAA5AAAAD4AAAAUAAAAFgAAABYAAAAWAAAAFgAA
        ABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAWAAAAFgAAABYAAAAXAAAADgAA
        AAAAAAAYAAAA1wAAAF4AAAAAAAAAKwAAAEEAAADGAAAA2QAAAOIAAAD5AAAA3gAAANgAAADYAAAA2AAA
        ANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAAANgAAADYAAAA2AAA
        ANsAAACrAAAADAAAABcAAADXAAAAXgAAAAAAAAAAAAAAAAAAAPYAAACWAAAAWAAAAFoAAABbAAAAXAAA
        AFwAAABcAAAAXAAAAFwAAABcAAAAXAAAAFwAAABcAAAAXAAAAFwAAABcAAAAXAAAAFwAAABcAAAAXAAA
        AFwAAABZAAAAmwAAANUAAAAUAAAAFgAAANcAAABeAAAAAAAAAFMAAAB9AAAA9QAAAFsAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAABhAAAA1QAAABQAAAAWAAAA1wAAAF4AAAAAAAAAiwAAANIAAAD1AAAAWwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGEAAADVAAAAFAAAABYAAADXAAAAXgAAAAAAAABOAAAAdgAA
        APUAAABbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYQAAANUAAAAUAAAAFgAAANcAAABeAAAAAAAA
        AAAAAAAAAAAA9QAAAFsAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhAAAA1QAAABQAAAAWAAAA1wAA
        AF4AAAAAAAAAKAAAAD0AAAD1AAAAWwAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGEAAADVAAAAFAAA
        ABYAAADXAAAAXgAAAAAAAACKAAAA0AAAAPUAAABbAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYQAA
        ANUAAAAUAAAAFgAAANcAAABeAAAAAAAAAG4AAACmAAAA9QAAAFsAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAABhAAAA1QAAABQAAAAWAAAA1wAAAF4AAAAAAAAABwAAAAoAAAD1AAAAXAAAAAAAAAACAAAAAgAA
        AAIAAAACAAAAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAGEAAADVAAAAFAAAABYAAADXAAAAXgAAAAAAAAAQAAAAGQAAAPYAAADHAAAAqAAA
        AKwAAACsAAAArAAAAKwAAABrAAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAYQAAANUAAAAUAAAAFgAAANsAAACOAAAACAAAAKcAAAC9AAAArgAA
        AP0AAADMAAAAmAAAAJoAAACZAAAA0QAAALwAAAAIAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABhAAAA1QAAABQAAAAWAAAA2gAAAIsAAAAIAAAAfQAA
        AG8AAAAWAAAApQAAANcAAAA5AAAAAAAAAAAAAACEAAAAvgAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGEAAADVAAAAFAAAABYAAADXAAAAXgAA
        AAAAAAAAAAAAAAAAAAAAAAAWAAAArgAAANUAAAA1AAAAAAAAAIQAAAC+AAAACAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAYAAAAOMAAABkAAAAZQAA
        AOQAAABdAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAZAAAAtAAAANEAAAAtAAAAgwAAAL4AAAAIAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABgAAAA+QAA
        AN0AAADbAAAA1wAAAEQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAdAAAAuQAAAMkAAACuAAAAvAAA
        AAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AGEAAADaAAAALwAAABsAAAAZAAAABQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAhAAAAvQAA
        AP8AAADDAAAAJwAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAAACAAAAAgAAAAIAAA
        ACAAAAAcAAAAdQAAANUAAAAWAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAkAAAAwQAAAPQAAADeAAAA3QAAAN0AAADdAAAA3QAAAN0AAADdAAAA3QAAAN0AAADdAAAA3QAA
        AN0AAADdAAAA3QAAANwAAADrAAAAzAAAABMAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAfAAAATgAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAABQAAAAUAAA
        AFAAAABQAAAAUAAAAFAAAABQAAAAUAAAAFAAAAA3AAAAAgAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAP////////////////gAAAD4AAAA+P///MAAAATAAAAEwAAABAAA
        AEQAAAAHAAAABD///gQ///4EP//+Bz///gQ///4EP//+BD///gQg//4EAH/+AAB//gAMf/4HhH/+B8B/
        /gfgf/4H8AAAP/gAAD/8AAA/////////////////
</value>
  </data>
</root>